clc; clear;

%% Params of Setki
global Ds Dt s t alpha f gamma umin umax SSB_0 k L1;
precision = 0.01;

folder_to_save = ['new_prog(',num2str(precision), ')'];

L = 7;
T = 8;
Ds = precision;
Dt = precision;
S_steps= L/Ds;
T_steps = T/Dt;
s=1:S_steps+1;
t=1:T_steps+1;

k = 3.676293e-05
L1 = 1.554516e+09
SSB_0 = 1.113945e+05


alpha(s(1:(S_steps/L):end)) = [1 0.95 0.85 0.8 0.7 0.5 0.3 0];
alpha(s) = interp1(s(1:(S_steps/L):end),alpha(s(1:(S_steps/L):end)),s(1:end));

f = @(time) 0;

lambda1 = 0;
lambda2 = 1 - lambda1;
phi = 1;
p = 1;

eps = 0;
umax = 10000;
umin = 0;

%% Init
u_input = [2 2 2 2 620 2 8 2 1603; 
    9340 207 524 1431 982 1794 108 767 5005; 
    7691 5962 2151 1416 2211 4492 1275 4420 5740; 
    1959 2149 1206 1088 675 3841 1779 6569 3534; 
    887 1395 1986 5585 576 1914 2442 8441 3473; 
    474 413 1401 2610 269 917 1465 5248 1829; 
    268 134 195 142 104 332 679 2535 748; 
    2 52 30 2 38 2 405 200 284];

CorrectU = input_data(u_input, S_steps, T_steps, L, T);

x_input = [487478000 184241000 20339000 10330000 8251000 871500 871500 871500 871500 871500 871500;
802109000 133653000 51741000 11535000 5261000 1176500 1176500 1176500 1176500 1176500 1176500;
1042362000 229120000 40336000 22948000 6212000 933666.666666667 933666.666666667 933666.666666667 933666.666666667 933666.666666667 933666.666666667;
"4" 1966 1271872000 275130000 67711000 16487000 9513000 1030666.66666667 1030666.66666667 1030666.66666667 1030666.66666667 1030666.66666667 1030666.66666667
"5" 1967 1074107000 338067000 72693000 28739000 8039000 1367000 1367000 1367000 1367000 1367000 1367000
"6" 1968 544161000 289816000 89859000 28739000 14327000 1187166.66666667 1187166.66666667 1187166.66666667 1187166.66666667 1187166.66666667 1187166.66666667
"7" 1969 480220000 141210000 72620000 34166000 11439000 1674666.66666667 1674666.66666667 1674666.66666667 1674666.66666667 1674666.66666667 1674666.66666667
"8" 1970 1561254000 130875000 38754000 32370000 15432000 1422666.66666667 1422666.66666667 1422666.66666667 1422666.66666667 1422666.66666667 1422666.66666667
"9" 1971 2034987000 414571000 33591000 14955000 16036000 1786833.33333333 1786833.33333333 1786833.33333333 1786833.33333333 1786833.33333333 1786833.33333333
"10" 1972 509406000 518658000 90490000 12157000 5981000 2137666.66666667 2137666.66666667 2137666.66666667 2137666.66666667 2137666.66666667 2137666.66666667
"11" 1973 740440000 119372000 105873000 29912000 4964000 1202666.66666667 1202666.66666667 1202666.66666667 1202666.66666667 1202666.66666667 1202666.66666667
"12" 1974 726505000 177194000 23861000 36680000 11073000 939000 939000 939000 939000 939000 939000
"13" 1975 1236753000 169397000 36901000 9666000 16455000 1205333.33333333 1205333.33333333 1205333.33333333 1205333.33333333 1205333.33333333 1205333.33333333
"14" 1976 846614000 285501000 33996000 13639000 3812000 1657500 1657500 1657500 1657500 1657500 1657500
"15" 1977 2092772000 171442000 51226000 10937000 5137000 1031000 1031000 1031000 1031000 1031000 1031000
"16" 1978 1333077000 443743000 30792000 18834000 5598000 775333.333333333 775333.333333333 775333.333333333 775333.333333333 775333.333333333 775333.333333333
"17" 1979 1636385000 271577000 80258000 9005000 7374000 595333.333333333 595333.333333333 595333.333333333 595333.333333333 595333.333333333 595333.333333333
"18" 1980 2623448000 313013000 58806000 24711000 3982000 786833.333333333 786833.333333333 786833.333333333 786833.333333333 786833.333333333 786833.333333333
"19" 1981 1056001000 494350000 58747000 17678000 8882000 610000 610000 610000 610000 610000 610000
"20" 1982 1727179000 191760000 92042000 17024000 6599000 938666.666666667 938666.666666667 938666.666666667 938666.666666667 938666.666666667 938666.666666667
"21" 1983 946949000 320937000 33090000 21245000 5434000 755500 755500 755500 755500 755500 755500
"22" 1984 1709993000 177371000 51896000 8047000 6790000 647833.333333333 647833.333333333 647833.333333333 647833.333333333 647833.333333333 647833.333333333
"23" 1985 415817000 332701000 32958000 14820000 2806000 710833.333333333 710833.333333333 710833.333333333 710833.333333333 710833.333333333 710833.333333333
"24" 1986 1861699000 84881000 57815000 10212000 5661000 506166.666666667 506166.666666667 506166.666666667 506166.666666667 506166.666666667 506166.666666667
"25" 1987 709276000 387317000 16365000 15466000 3034000 568166.666666667 568166.666666667 568166.666666667 568166.666666667 568166.666666667 568166.666666667
"26" 1988 490411000 151752000 70263000 5234000 4986000 401666.666666667 401666.666666667 401666.666666667 401666.666666667 401666.666666667 401666.666666667
"27" 1989 827364000 107689000 30394000 17499000 1832000 498833.333333333 498833.333333333 498833.333333333 498833.333333333 498833.333333333 498833.333333333
"28" 1990 327420000 180593000 20296000 7972000 5228000 288166.666666667 288166.666666667 288166.666666667 288166.666666667 288166.666666667 288166.666666667
"29" 1991 374370000 75132000 30669000 6111000 2741000 507833.333333333 507833.333333333 507833.333333333 507833.333333333 507833.333333333 507833.333333333
"30" 1992 856834000 90400000 14979000 8947000 2073000 356666.666666667 356666.666666667 356666.666666667 356666.666666667 356666.666666667 356666.666666667
"31" 1993 434521000 201995000 17910000 5104000 2918000 276833.333333333 276833.333333333 276833.333333333 276833.333333333 276833.333333333 276833.333333333
"32" 1994 1018661000 107259000 36534000 5594000 1778000 299500 299500 299500 299500 299500 299500
"33" 1995 596002000 248451000 23318000 10440000 1823000 229833.333333333 229833.333333333 229833.333333333 229833.333333333 229833.333333333 229833.333333333
"34" 1996 372876000 141775000 39577000 5710000 3344000 241500 241500 241500 241500 241500 241500
"35" 1997 1160081000 96568000 25848000 9548000 1868000 287166.666666667 287166.666666667 287166.666666667 287166.666666667 287166.666666667 287166.666666667
"36" 1998 141210000 300740000 20613000 7003000 3011000 213333.333333333 213333.333333333 213333.333333333 213333.333333333 213333.333333333 213333.333333333
"37" 1999 251450000 37272000 54285000 5519000 2072000 270500 270500 270500 270500 270500 270500
"38" 2000 457257000 67914000 8617000 10507000 1578000 191666.666666667 191666.666666667 191666.666666667 191666.666666667 191666.666666667 191666.666666667
"39" 2001 167042000 127389000 14258000 2296000 2420000 135000 135000 135000 135000 135000 135000
"40" 2002 246965000 48388000 25540000 4067000 626000 172166.666666667 172166.666666667 172166.666666667 172166.666666667 172166.666666667 172166.666666667
"41" 2003 123254000 68186000 10749000 7506000 1153000 98166.6666666667 98166.6666666667 98166.6666666667 98166.6666666667 98166.6666666667 98166.6666666667
"42" 2004 201793000 37459000 14371000 3257000 2172000 108333.333333333 108333.333333333 108333.333333333 108333.333333333 108333.333333333 108333.333333333
"43" 2005 154508000 53960000 8150000 3628000 1066000 195166.666666667 195166.666666667 195166.666666667 195166.666666667 195166.666666667 195166.666666667
"44" 2006 358255000 45388000 12417000 2326000 1170000 171166.666666667 171166.666666667 171166.666666667 171166.666666667 171166.666666667 171166.666666667
"45" 2007 168552000 100609000 10064000 4366000 1043000 153000 153000 153000 153000 153000 153000
"46" 2008 196025000 46490000 23742000 3432000 1780000 187166.666666667 187166.666666667 187166.666666667 187166.666666667 187166.666666667 187166.666666667
"47" 2009 193300000 54122000 11460000 8139000 1539000 221000 221000 221000 221000 221000 221000
"48" 2010 296262000 55160000 13354000 4308000 3591000 216000 216000 216000 216000 216000 216000
"49" 2011 148153000 80902000 13808000 4803000 2007000 436500 436500 436500 436500 436500 436500
"50" 2012 203211000 41689000 21047000 6704000 2297000 396166.666666667 396166.666666667 396166.666666667 396166.666666667 396166.666666667 396166.666666667
"51" 2013 263024000 52892000 11685000 9939000 3509000 393666.666666667 393666.666666667 393666.666666667 393666.666666667 393666.666666667 393666.666666667
"52" 2014 391601000 66836000 15902000 5772000 5136000 502000 502000 502000 502000 502000 502000
"53" 2015 169058000 104925000 20228000 7482000 3032000 879000 879000 879000 879000 879000 879000
"54" 2016 145365000 41357000 30152000 10075000 4168000 889833.333333333 889833.333333333 889833.333333333 889833.333333333 889833.333333333 889833.333333333

    ]


x_input = [280026 558880 682092 670578 557756 537638 691972 753642 813983; 
    118907 55968 111702 136328 134027 111239 107457 138303 150629; 
    33972 40021 21307 42458 51348 50734 41526 41080 52499; 
    10172 14084 18868 10804 23676 28260 26195 23240 20628; 
    2456 5064 7454 11312 6161 14862 15329 15621 9938; 
    993 879 2141 3203 2933 3475 7971 7856 3524; 
    483 254 229 288 127 1590 1429 3760 986; 
    3 83 48 3 61 3 649 320 374];
CorrectX = input_data(x_input, S_steps, T_steps, L, T);

%% Iteration Scheme

CorrectU(s(:), t(:)) = zeros(size(s,2), size(t,2));
xu(s(:),t(:)) = zeros(size(s,2), size(t,2));
xu = Boundary2(CorrectX(s,1), CorrectU);

%{



%% Init last column
%need_x(s) = xu(s, end);

need_x(s(1:(S_steps/L):end)) = [813983 150629 52499 20628 9938 3524 986 374]';
need_x(s) = interp1(s(1:(S_steps/L):end), need_x(s(1:(S_steps/L):end)), s(1:end));

%% Init of functionals
J2uCorrect = trapz(0:Ds:L, (xu(s, end) - need_x(s)').^2);
J1uCorrect = -p*trapz(0:Dt:T, trapz(0:Ds:L, phi*CorrectU(s, t)));

%% Optimization problem
pause
figure(1)
hold on;
xlabel('J2u')
ylabel('J1u')
lambda1 = 0;
while (lambda1 <= 1)
    k = 1;
    J2u = 1;
    uk = 5000*ones(size(s,2), size(t,2));
    uk_ = zeros(size(s,2), size(t,2));
    uprev = -1*ones(size(s,2), size(t,2));
    prev = 1;
    storedJ1u = [];
    storedJ2u = [];
    storedPrev = [];
    
    while (k < 1000000) && (prev > 10e-3) && (J2u > 10e-3)
        %% First Step
        % Pryamaya zadacha
        xu = Boundary(CorrectX(s,1), uk);

        % Obratnaya
        psiStartCondition = -2*(xu(s, end) - need_x(s)');
        psi = reverseBoundary(psiStartCondition);

        % Derivatives of Functionals
        J1_ = -p*phi*L*T;
        J2_ = psi;

        beta = sqrt(Ds^2+Dt^2)/norm(J2_);
        if beta < 0.1
            beta = 0.1;
        end

        uk_ = projection(uk - beta * (lambda1 * J1_ + lambda2 * J2_));

        %% Second step
        % Pryamaya zadacha
        xu = Boundary(CorrectX(s,1), uk_);

        % Obratnaya
        psiStartCondition = -2*(xu(s, end) - need_x(s)');
        psi = reverseBoundary(psiStartCondition);

        % Derivatives of Functionals
        J1_ = -p*phi*L*T;
        J2_ = psi;

        beta = k*(Ds^2+Dt^2)/norm(J2_);
        if beta < 0.1
            beta = 0.1;
        end

        uk = projection(uk_ - beta * (lambda1 * J1_ + lambda2 * J2_));


        xu = Boundary(CorrectX(s, 1), uk);

        k

        J2u = trapz((xu(s, end) - need_x(s)').^2)*Ds;
        J1u = -p*trapz(trapz(phi*uk(s, t))*Ds)*Dt;
        abs(J2u - J2uCorrect)
        abs(J1u - J1uCorrect)
        storedJ1u(end+1) = J1u;
        storedJ2u(end+1) = J2u;
        k = k+1;

        prev = sum(sum((uk-uprev).^2))
        storedPrev(end+1) = prev;
        
        uprev = uk;
    end
    figure(1)
    if (lambda1 == 0)
        plot(J2u, J1u, 'ro', 'markers', 5);
    elseif (lambda1 == 1)
        plot(J2u, J1u, 'yo', 'markers', 5);
    else
        plot(J2u, J1u, 'o', 'markers', 5, 'Color', [0, lambda1, 0] );
    end
    folder_to_save = num2str(lambda1);
    mkdir(folder_to_save);
    %{
    plotGraph(CorrectX(1,:),xu(1,:), {0:T}, 't', 'x(s=0, t)', folder_to_save);
    plotGraph(CorrectX(1*S_steps/L+1,:),xu(1*S_steps/L+1,:), {0:T}, 't', 'x(s=1, t)', folder_to_save);
    plotGraph(CorrectX(2*S_steps/L+1,:),xu(2*S_steps/L+1,:), {0:T}, 't', 'x(s=2, t)', folder_to_save);
    plotGraph(CorrectX(5*S_steps/L+1,:),xu(5*S_steps/L+1,:), {0:T}, 't', 'x(s=5, t)', folder_to_save);
    plotGraph(CorrectX(end,:),xu(end,:), {0:T}, 't', 'x(s=7, t)', folder_to_save);
    
    plotGraph(CorrectX(:,1),xu(:,1), {0:L}, 's', 'x(s, t=0)', folder_to_save);
    plotGraph(CorrectX(:,1*T_steps/T+1),xu(:,1*T_steps/T+1), {0:L}, 's', 'x(s, t=1)', folder_to_save);
    plotGraph(CorrectX(:,2*T_steps/T+1),xu(:,2*T_steps/T+1), {0:L}, 's', 'x(s, t=2)', folder_to_save);
    plotGraph(CorrectX(:,5*T_steps/T+1),xu(:,5*T_steps/T+1), {0:L}, 's', 'x(s, t=5)', folder_to_save);
    plotGraph(CorrectX(:,t(end)),xu(:,t(end)), {0:L}, 's', 'x(s, t=8)', folder_to_save);

    plotGraph(CorrectU(1,:),uk(1,:), {0:T}, 't', 'u(s=0, t)', folder_to_save);
    plotGraph(CorrectU(1*S_steps/L+1,:),uk(1*S_steps/L+1,:), {0:T}, 't', 'u(s=1, t)', folder_to_save);
    plotGraph(CorrectU(2*S_steps/L+1,:),uk(2*S_steps/L+1,:), {0:T}, 't', 'u(s=2, t)', folder_to_save);
    plotGraph(CorrectU(5*S_steps/L+1,:),uk(5*S_steps/L+1,:), {0:T}, 't', 'u(s=5, t)', folder_to_save);
    plotGraph(CorrectU(end,:),uk(end,:), {0:T}, 't', 'u(s=7, t)', folder_to_save);

    plotGraph(CorrectU(:,1),uk(:,1), {0:L}, 's', 'u(s, t=0)', folder_to_save);
    plotGraph(CorrectU(:,1*T_steps/T+1),uk(:,1*T_steps/T+1), {0:L}, 's', 'u(s, t=1)', folder_to_save);
    plotGraph(CorrectU(:,2*T_steps/T+1),uk(:,2*T_steps/T+1), {0:L}, 's', 'u(s, t=2)', folder_to_save);
    plotGraph(CorrectU(:,5*T_steps/T+1),uk(:,5*T_steps/T+1), {0:L}, 's', 'u(s, t=5)', folder_to_save);
    plotGraph(CorrectU(:,t(end)),uk(:,t(end)), {0:L}, 's', 'u(s, t=8)', folder_to_save);
    save([pwd '/' folder_to_save '/storedJ1u.mat'], 'storedJ1u');
    save([pwd '/' folder_to_save '/storedJ2u.mat'], 'storedJ2u');
    save([pwd '/' folder_to_save '/storedPrev.mat'], 'storedPrev');
    %}
    lambda1 = lambda1+0.1;
    lambda2 = 1 - lambda1;
end
hold off;
saveas(gcf,'J1J2.jpg','jpg')

%}